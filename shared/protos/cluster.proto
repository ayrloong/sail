syntax = "proto3";
import "destination.proto";
import "common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package sail.api.v1;

service ClusterService {
  rpc List(google.protobuf.Empty)  returns (ListClusterResponse) {}
  rpc Watch(google.protobuf.Empty) returns (stream WatchClusterResponse) {}
}

message ListClusterResponse {
  repeated Cluster items = 1;
}

message WatchClusterResponse{
  EventType event_type = 1;
  Cluster cluster = 2;
}

message Cluster {
  string cluster_id = 1;
  google.protobuf.StringValue  service_name = 2;
  bool  enabled_service_discovery = 3;
  google.protobuf.StringValue load_balancing_policy = 4;
  ClusterSessionAffinity session_affinity = 5;
  ClusterHealthCheck health_check = 6;
  repeated Destination destinations = 7;
}

message ClusterSessionAffinity {
  bool enabled = 1;
  string  policy = 2;
  string  failure_policy = 3;
  string  affinity_key_name = 4;
  SessionAffinityCookie cookie = 5;

  message SessionAffinityCookie {
    string  path = 1;
    string  domain = 2;
    bool http_only = 3;

    enum CookieSecurePolicy {
      SAME_AS_REQUEST = 0;
      ALWAYS = 1;
      NONE = 2;
    }
  }
}

enum SameSiteMode {
  NONE = 0;
  LAX = 1;
  STRICT = 2;
}

message ClusterHealthCheck {
  PassiveHealthCheck passive = 1;
  ActiveHealthCheck active = 2;
  google.protobuf.StringValue  available_destinations_policy = 3;

  message PassiveHealthCheck {
    bool enabled = 1;
    google.protobuf.StringValue policy = 2;
    google.protobuf.StringValue reactivation_period = 3;
  }

  message ActiveHealthCheck {
    bool enabled = 1;
    google.protobuf.StringValue interval = 2;
    google.protobuf.StringValue timeout = 3;
    google.protobuf.StringValue policy = 4;
    google.protobuf.StringValue path = 5;
    google.protobuf.StringValue query = 6;
  }
}