@baseUrl = http://localhost:8100
@apiVersion = 1.0
@id = 4fd7dc02-c5d9-4fe0-ac8b-74eb18618a83

### Get all clusters
GET {{baseUrl}}/api/clusters?keywords=example&api-version={{apiVersion}}
Accept: application/json

### Create the cluster
POST {{baseUrl}}/api/clusters?api-version={{apiVersion}}
Content-Type: application/json

{
  "name": "example",
  "healthCheck": {
    "availableDestinationsPolicy": "HealthyOrPanic",
    "active": {
      "enabled": true,
      "interval": "00:00:10",
      "timeout": "00:00:10",
      "policy": "ConsecutiveFailures",
      "path": "/api/health",
      "query": "?foo=bar"
    },
    "passive": {
      "enabled": true,
      "policy": "TransportFailureRate",
      "reactivationPeriod": "00:02:00"
    }
  },
  "sessionAffinity": {
    "enabled": true,
    "policy": "CustomHeader",
    "failurePolicy": "Return503Error",
    "affinityKeyName": "Key1",
    "cookie": {
      "domain": "localhost",
      "expiration": "03:00:00",
      "httpOnly": true,
      "isEssential": true,
      "maxAge": "1.00:00:00",
      "path": "mypath",
      "sameSite": 1,
      "securePolicy":2
    }
  },
  "destinations": [
    {
      "address": "https://example.com/"
    }
  ]
}

### Update the cluster
PUT {{baseUrl}}/api/clusters/{{id}}?api-version={{apiVersion}}
Content-Type: application/json

{
  "name": "example-updater",
  "serviceName": "example",
  "serviceDiscoveryType": 1,
  "destinations": []
}

### Delete the cluster
DELETE {{baseUrl}}/api/clusters/{{id}}?api-version={{apiVersion}}