@page "/routes"
@using System.Linq 
@using Sail.Dashboard.Models.Routes
@using Sail.Dashboard.Services
@inject RouteService RouteService

<div>
<header class="mb-8 flex justify-between items-center">
                <div>
                    <h2 class="text-3xl font-semibold text-gray-800">All Routes</h2>
                    <p class="text-gray-500 mt-1">Manage and view all configured gateway routes.</p>
                </div>  
                <NavLink href="/routes/form" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-700 hover:bg-teal-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    Add New Route
                </NavLink>
            </header>

            <!-- Routes Table -->
            <div class="bg-white p-6 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200">
                <div class="overflow-x-auto">
                    @if (Routes == null)
                    {
                        <p><em>Loading routes...</em></p>
                    }
                    else if (!Routes.Any())
                    {
                        <p>No routes found. <NavLink href="/routes/form">Add one now!</NavLink></p>
                    }
                    else
                    {
                        <table class="w-full min-w-lg">
                            <thead>
                            <tr class="text-left text-xs text-gray-500 uppercase border-b">
                                <th class="py-3 px-4 font-medium">Path</th>
                                <th class="py-3 px-4 font-medium">Name</th>
                                <th class="py-3 px-4 font-medium">Methods</th>
                                <th class="py-3 px-4 font-medium">Created At</th>
                                <th class="py-3 px-4 font-medium text-right">Actions</th>
                            </tr>
                            </thead>
                            <tbody class="text-gray-700">
                            @if (Routes == null)
                            {
                                <tr><td colspan="5" class="py-3 px-4 text-center">Loading routes...</td></tr>
                            }
                            else if (!Routes.Any())
                            {
                                <tr><td colspan="5" class="py-3 px-4 text-center">No routes found.</td></tr>
                            }
                            else
                            {
                                @foreach (var route in Routes)
                                {
                                    <tr class="@(Routes.LastOrDefault() == route ? "hover:bg-gray-50" : "border-b hover:bg-gray-50")" @key="route.Id">
                                        <td class="py-3 px-4"><a href="/route-details-blazor/@route.Id" class="text-blue-600 hover:underline">@route.Match.Path</a></td>
                                        <td class="py-3 px-4">@route.Name</td>
                                        <td class="py-3 px-4">
                                            @if (route.Match.Methods is not null && route.Match.Methods.Any())
                                            {
                                                @foreach (var method in route.Match.Methods)
                                                {
                                                    <span class="inline-block bg-@GetMethodColor(method)-100 text-@GetMethodColor(method)-700 text-xs font-semibold mr-1 px-2 py-0.5 rounded-full">@method</span>
                                                }
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td class="py-3 px-4">@route.CreatedAt.ToString("yyyy-MM-dd")</td>
                                        <td class="py-3 px-4 text-right">
                                            <a href="/routes/@route.Id" class="text-gray-500 hover:text-blue-600 mr-2" title="View Details">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block" viewBox="0 0 20 20" fill="currentColor">
                                                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                                                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.022 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                                                </svg>
                                            </a>
                                            <a href="/routes/form/@route.Id" class="text-gray-500 hover:text-teal-600 mr-2" title="Edit Route">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block" viewBox="0 0 20 20" fill="currentColor">
                                                    <path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z" />
                                                    <path fill-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clip-rule="evenodd" />
                                                </svg>
                                            </a>
                                            <button @onclick="() => DeleteRoute(route.Id)" class="text-gray-500 hover:text-red-600 focus:outline-none" title="Delete Route">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                                </svg>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                        </table>
                    }
                </div>
            </div>
</div>

@code {
    
    private List<RouteResult>? Routes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Routes = await RouteService.ListAsync(CancellationToken.None);
    }

    private async Task DeleteRoute(Guid routeId)
    {
        await RouteService.DeleteAsync(routeId, CancellationToken.None);
        StateHasChanged(); 
    }

    private string GetMethodColor(string method)
    {
        return method switch
        {
            "GET" => "teal",
            "POST" => "blue",
            "PUT" => "yellow",
            "DELETE" => "red",
            "PATCH" => "purple",
            "OPTIONS" => "gray",
            "HEAD" => "pink",
            _ => "gray"
        };
    }
}