@implements Microsoft.FluentUI.AspNetCore.Components.IDialogContentComponent
@using Microsoft.FluentUI.AspNetCore.Components

    <FluentDialogHeader ShowDismiss="false">
        <div class="flex items-center justify-between p-4 border-b border-gray-200 bg-white rounded-t-lg">
            <h3 class="text-xl font-semibold text-gray-900">
                @Title
            </h3>
            <button @onclick="CancelAsync" type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
                    aria-label="Close dialog">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                </svg>
                <span class="sr-only">Close dialog</span>
            </button>
        </div>
    </FluentDialogHeader>

    <FluentDialogBody>
        <div class="p-5 space-y-4 bg-white">
           
                <p class="text-base leading-relaxed text-gray-700 whitespace-pre-line">
                    @Message
                </p>
        </div>
    </FluentDialogBody>

    <FluentDialogFooter>
        <div class="flex items-center justify-end p-4 space-x-3 border-t border-gray-200 bg-gray-50 rounded-b-lg">
            <button @onclick="@CancelAsync" type="button"
                    class="text-gray-700 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-300 rounded-lg border border-gray-300 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10">
                Cancel
            </button>
            <button @onclick="ConfirmAsync" type="button"
                    class="text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                Confirm
            </button>
        </div>
    </FluentDialogFooter>


@code {
    [CascadingParameter] private FluentDialog Dialog { get; set; } = default!;
 
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Message { get; set; }
    
    private async Task ConfirmAsync()
    {
        await Dialog.CloseAsync();
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}